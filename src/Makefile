CC = gcc
CCOPT = -O3 -flto -fopenmp -ffast-math -fno-finite-math-only -march=native
CCDEBUG = -DNDEBUG
CCDEF =
CCWARN = -Wall -Wextra
XCFLAGS = 
XLDFLAGS = 

MODEL_LANG    ?= R SimoC
LUAJIT_CFLAGS ?= $(shell pkg-config --cflags luajit)
LUAJIT_LIB    ?= $(shell pkg-config --libs luajit)
R_CFLAGS      ?= $(shell pkg-config --cflags libR)
R_LIB         ?= $(shell pkg-config --libs-only-l --libs-only-L libR)
LIBFFI_CFLAGS ?= $(shell pkg-config --cflags libffi)
LIBFFI_LIB    ?= $(shell pkg-config --libs libffi)

M2_EXECUTABLE = m2
LUA_FFI_API = lua/m2_cdef.lua
LUA_EXPORTS = lua_exports.h

default: $(M2_EXECUTABLE)

profile: CCOPT += -g3 -pg
profile: default

debug: CCOPT = -g3 -fopenmp
debug: CCDEBUG = -DDEBUG
debug: default

ubsan: CC = clang
ubsan: CCOPT = -g3 -O3 -march=native -fopenmp -flto -ffast-math -fsanitize=undefined -fsanitize=address
ubsan: CCWARN += -Wno-c++17-extensions -Wno-gnu-alignof-expression
ubsan: CCDEBUG = -DDEBUG
ubsan: default

M2_O = main.o bitmap.o fhk_graph.o fhk_solve.o fhk_aux.o type.o arena.o sim.o sim_ds.o grid.o vec.o\
	   gmap.o vmath.o model_aux.o

ifneq (,$(findstring R,$(MODEL_LANG)))
	M2_O += model_R.o
	XLDFLAGS += $(R_LIB)
endif

ifneq (,$(findstring SimoC,$(MODEL_LANG)))
	M2_O += model_SimoC.o
	XLDFLAGS += $(LIBFFI_LIB) -ldl
endif

M2_C = $(M2_O:.o=.c)

CFLAGS = $(LUAJIT_CFLAGS) $(CCOPT) $(CCDEBUG) $(CCDEF) $(CCWARN) $(XCFLAGS)
# -rdynamic is needed to access C symbols of the executable from lua
# ffi.C uses dlsym(RTLD_DEFAULT, ...)
LDFLAGS = -rdynamic $(LUAJIT_LIB) $(CCOPT) $(CCDEBUG) $(XLDFLAGS)

dep: $(M2_C) $(LUA_EXPORTS)
	$(CC) $(CFLAGS) -MM $(M2_C) > Makefile.dep
	$(CC) $(CFLAGS) -MM -MT $(LUA_FFI_API) $(LUA_EXPORTS) >> Makefile.dep

# XXX: this is a turbo hacky way to do it
# for whatever reason this is really fragile, it breaks if
#     * -g3 is set
#     * any -I option is given
ffi $(LUA_FFI_API): $(LUA_EXPORTS)
	echo "-- Autogenerated file - don't touch" > $(LUA_FFI_API)
	echo "local ffi = require 'ffi'" >> $(LUA_FFI_API)
	echo "ffi.cdef [[" >> $(LUA_FFI_API)
	$(CC) $(CCDEF) $(CCDEBUG) -P -E -nostdinc -DEXPORT_LUA_CDEF $(LUA_EXPORTS) 2>/dev/null\
		| sed -r 's/@@remove@@\s*(;?)//'\
		>> $(LUA_FFI_API)\
		| true
	echo "]]" >> $(LUA_FFI_API)

clean:
	$(RM) $(M2_O) $(M2_EXECUTABLE) $(LUA_FFI_API)

.PHONY: ffi dep clean

include Makefile.dep

model_R.o: model_R.c
	$(CC) $(CFLAGS) $(R_CFLAGS) -c $< -o $@

model_SimoC.o: model_SimoC.c
	$(CC) $(CFLAGS) $(LIBFFI_CFLAGS) -c $< -o $@

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

$(M2_EXECUTABLE): $(M2_O) $(LUA_FFI_API)
	$(CC) $(LDFLAGS) $(M2_O) -o $@
